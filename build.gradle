plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.google.protobuf' version '0.8.11'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'info.jackwarren'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

mainClassName = 'MainKt'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/libly/maven" }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'                        // Kotlin API
    implementation "io.ktor:ktor-server-core:$ktor_version"                         // Kotlin sockets
    implementation "io.ktor:ktor-network:$ktor_version"                             // Kotlin networking
    implementation "com.google.guava:guava:28.2-jre"                                // Hashing tools
    implementation "com.goterl.lazycode:lazysodium-java:4.2.5"                      // LibSodium wrapper
    implementation "net.java.dev.jna:jna:5.5.0"                                     // Native access for LazySodium
    implementation 'co.libly:resource-loader:1.3.6'                                 // Library loader for LazySodium
    implementation 'commons-codec:commons-codec:1.14'                               // Binary tools
    implementation "com.google.protobuf:protobuf-java:$protoc_version"              // Protobuf runtime
    implementation 'com.github.ajalt:clikt:2.4.0'                                   // Command-line parsing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'                      // Junit5 API
}

Closure kotlinCompilationOptions = {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xuse-experimental=" + [
                "kotlin.time.ExperimentalTime",
                "io.ktor.util.KtorExperimentalAPI"
        ].join(",")

    }
}

compileKotlin(kotlinCompilationOptions)
compileTestKotlin(kotlinCompilationOptions)

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protoc_version"
    }
}

shadowJar {
    archiveClassifier.set ""
    archiveVersion.set ""
}